# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: repo-name

  # A short description of the repository that will show up on GitHub
  # description: description of repo

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  private: true

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: true

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: true

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: release

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: Finished
    # If including a `#`, make sure to wrap it with quotes!
    color: '#90EE90'
    description: Use this when an issue has been completed.

  - name: In Progress
    # If including a `#`, make sure to wrap it with quotes!
    color: '#FFDBBB'
    description: Use this to clarify when an issue is in progress.

  - name: To Do
    # If including a `#`, make sure to wrap it with quotes!
    color: '#1D76DB'
    description: Use this when there is something to do.

  - name: Won't Fix
    # If including a `#`, make sure to wrap it with quotes!
    color: '#ffffff'
    description: Use this to say that this will not be worked on.

  - name: High Priority
    # If including a `#`, make sure to wrap it with quotes!
    color: '#B60205'
    description: Use this to clarify the priority of an issue.

  - name: Medium Priority
    # If including a `#`, make sure to wrap it with quotes!
    color: '#FBCA04'
    description: Use this to clarify the priority of an issue.

  - name: Low Priority
    # If including a `#`, make sure to wrap it with quotes!
    color: '#0E8A16'
    description: Use this to clarify the priority of an issue.

  - name: Suggestion/New Feature
    # If including a `#`, make sure to wrap it with quotes!
    color: '#ffd700'
    description: Use this when suggesting new features!

  - name: Enhancement
    # If including a `#`, make sure to wrap it with quotes!
    color: '#a2eeef'
    description: Use this when suggesting updates to already existing features.

  - name: Bugs
    # If including a `#`, make sure to wrap it with quotes!
    color: '#d73a4a'
    description: Use this when something isn't working as intended.

  - name: Crash
    # If including a `#`, make sure to wrap it with quotes!
    color: '#D93F0B'
    description: Use this when reporting a crash in a game, feature, application.

  - name: Security Issue
    # If including a `#`, make sure to wrap it with quotes!
    color: '#720027'
    description: Use this when you've identified a potential security vulnerability.

  - name: Documentation
    # If including a `#`, make sure to wrap it with quotes!
    color: '#0075ca'
    description: Use this when suggesting Improvements or additions to documentation.

  - name: Duplicate
    # If including a `#`, make sure to wrap it with quotes!
    color: '#cfd3d7'
    description: Use this when the issue or pull request already exists.

  - name: Good First Issue
    # If including a `#`, make sure to wrap it with quotes!
    color: '#7057ff'
    description: Use this for newcomers who make a really good first issue.

  - name: Help Wanted
    # If including a `#`, make sure to wrap it with quotes!
    color: '#008672'
    description: Use this when extra attention is needed.
    # Provide a new name to rename an existing label
    new_name: first-timers-only

  - name: Invalid
    # If including a `#`, make sure to wrap it with quotes!
    color: '#FDFD96'
    description: Hmm... Something doesn't seem right here!

  - name: Question
    # If including a `#`, make sure to wrap it with quotes!
    color: '#d876e3'
    description: Use this when further information is requested.

# Milestones: define milestones for Issues and Pull Requests
milestones:
  - title: milestone-title
    description: milestone-description
    # The state of the milestone. Either `open` or `closed`
    state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
# teams:
  # - name: core
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
  #   permission: admin
  # - name: docs
  #   permission: push

branches:
  - name: release
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams: []
  - name: development
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams: []